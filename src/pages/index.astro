---
import Result from '../components/Result.astro';
import { DATA_URL, RESULT_LIMIT_COUNT } from '../constants';
import Layout from '../layouts/Layout.astro';
import type { MappedResult } from '../types';
import { limitResults, mapResultData, parseResultsFromResponse, randomiseResults } from '../utilities';

const data = await fetch(DATA_URL, {
    method: "POST",
    headers: {
        "Content-Type": "application/json"
    },
    body: JSON.stringify({
        "requests": [
            {
                "indexName": "production_cars_rank_asc",
                "params": "facetFilters=%5B%5B%22listingStage%3Alive%22%5D%2C%5B%22lotType%3Acar%22%5D%2C%5B%22regionCode%3AUK%22%5D%5D&facets=%5B%22auctionId%22%2C%22collectionId%22%2C%22countryCode%22%2C%22driveSide%22%2C%22isBoosted%22%2C%22listingStage%22%2C%22lotType%22%2C%22noReserve%22%2C%22productMake%22%2C%22regionCode%22%2C%22saleFormat%22%2C%22tags%22%2C%22vendorType%22%5D&filters=listingStage%3Acomingsoon%20%20OR%20%20listingStage%3Alive%20%20OR%20%20listingStage%3Asold&highlightPostTag=__%2Fais-highlight__&highlightPreTag=__ais-highlight__&hitsPerPage=38&maxValuesPerFacet=999&page=0&query="
            }
        ]
    })
});
const dataJSON = await data.json();

const cars = parseResultsFromResponse(dataJSON);

const randomCars = randomiseResults(cars);

const limitedCars = limitResults(randomCars, RESULT_LIMIT_COUNT);

const mappedCars = limitedCars.map(mapResultData);
---
<Layout>
	<section class="container mx-auto text-emerald-800 p-4 bg-emerald-200 rounded-[24px] border border-emerald-600 border-8 mdMax:mx-4">
		<div class="max-w-prose mb-6 text-center mx-auto">
            <h1 class="text-5xl mb-2 font-display text-emerald-900"><a href={`${import.meta.env.BASE_URL}`}>Car Picker Game</a></h1>
			<p>The aim of the game is to select a single car from below to own for a year. All purchase and running costs are included in this hypothetical scenario.</p>
		</div>
		<div class="grid mdMax:grid-rows-3 md:grid-cols-3 gap-4">
			{
				mappedCars && mappedCars.map(({ title, url }: MappedResult) => (
					<Result url={url} title={title} />
				))
			}
		</div>
	</section>
</Layout>
